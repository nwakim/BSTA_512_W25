(TestStat_b0 <- model1_b0$estimate / model1_b0$std.error)
# Chunk 16
model1_b0 %>% gt() %>%
tab_options(table.font.size = 40) %>% fmt_number(decimals = 2)
# Chunk 17
(pv = 2*pt(TestStat_b0, df=80-2, lower.tail=F))
# Chunk 18
model1_b0 %>% gt() %>%
tab_options(table.font.size = 40)
# Chunk 19
b1 <- model1_b1$estimate
SE_b1 <- model1_b1$std.error
# Chunk 20
nobs(model1) # sample size n
(tstar <- qt(.975, df = 80-2))
# Chunk 21
(CI_LB <- b1 - tstar*SE_b1)
(CI_UB <- b1 + tstar*SE_b1)
# Chunk 22
tidy(model1, conf.int = T) %>% gt() %>%
tab_options(table.font.size = 40) %>% fmt_number(decimals = 3)
# Chunk 23
tidy(model1, conf.int = T) %>% gt() %>%
tab_options(table.font.size = 40) %>% fmt_number(decimals = 3)
# Chunk 24
#| echo: false
tidy(model1) %>% gt() %>%
tab_options(table.font.size = 40) %>% fmt_number(decimals = 3)
# Chunk 25
(y_60 <- 50.9 + 0.232*60)
# Chunk 1: "setup"
#| label: "setup"
#| include: false
#| message: false
#| warning: false
library(tidyverse)
library(openintro)
library(janitor)
library(rstatix)
library(knitr)
library(gtsummary)
library(moderndive)
library(gt)
library(broom)
library(here)
library(pwr)
library(gridExtra) # NEW!!!
library(readxl)
# terminal: for icons
# quarto install extension quarto-ext/fontawesome
# set ggplot theme for slides
theme_set(theme_gray(base_size = 22))
# theme_update(text = element_text(size=16))  # set global text size for ggplots
# Chunk 2
#| include: false
#| message: false
#| warning: false
gapm1 <- read_excel(here("data/Gapminder_vars_2011.xlsx"), na = "NA")
gapm <- gapm1 %>% drop_na(LifeExpectancyYrs, FemaleLiteracyRate)
# Chunk 3
#| include: false
#| message: false
#| warning: false
# Fit regression model:
model1 <- gapm %>% lm(formula = LifeExpectancyYrs ~ FemaleLiteracyRate)
# some output, but not complete
model1
# Chunk 4
#| include: false
#| message: false
#| warning: false
summary(model1)
# Regression table:
# library(broom)  # for tidy() command
# library(gt)  # for gt() command
tidy(model1) %>% gt()
# Chunk 6
model1 <- gapm %>% lm(formula = LifeExpectancyYrs ~ FemaleLiteracyRate)
# Get regression table:
tidy(model1) %>% gt() %>%
tab_options(table.font.size = 40) %>%
fmt_number(decimals = 2)
# Chunk 7
#| fig-height: 8
#| fig-width: 11
#| echo: false
gapm_slr_plot = gapm %>%
ggplot(aes(x = FemaleLiteracyRate,
y = LifeExpectancyYrs)) +
geom_point(size = 4) +
geom_smooth(method = "lm", se = FALSE, size = 3, colour="#F14124") +
labs(x = "Female literacy rate (%)",
y = "Life expectancy (years)",
title = "Relationship between life expectancy and \n the female literacy rate in 2011") +
theme(axis.title = element_text(size = 30),
axis.text = element_text(size = 25),
title = element_text(size = 30))
gapm_slr_plot
# Chunk 8
summary(model1)
m1_sum2 = tidy(model1)
m1_sum = summary(model1)
m1_sum2 = tidy(model1)
m1_sum2$sigma
?tidy
#| echo: false
anova_wr = anova(model2)
# Chunk 1: "setup"
#| label: "setup"
#| include: false
#| message: false
#| warning: false
library(tidyverse)
library(openintro)
library(janitor)
library(rstatix)
library(knitr)
library(gtsummary)
library(moderndive)
library(gt)
library(broom)
library(here)
library(pwr)
library(gridExtra) # NEW!!!
library(readxl)
# terminal: for icons
# quarto install extension quarto-ext/fontawesome
# set ggplot theme for slides
theme_set(theme_gray(base_size = 22))
# theme_update(text = element_text(size=16))  # set global text size for ggplots
# Chunk 2
#| include: false
#| message: false
#| warning: false
gapm1 <- read_excel(here("data/Gapminder_vars_2011.xlsx"), na = "NA")
gapm <- gapm1 %>% drop_na(LifeExpectancyYrs, FemaleLiteracyRate)
# Chunk 3
#| include: false
#| message: false
#| warning: false
# Fit regression model:
model1 <- gapm %>% lm(formula = LifeExpectancyYrs ~ FemaleLiteracyRate)
reg_table = tidy(model1) %>% gt() %>%
tab_options(table.font.size = 40) %>%
fmt_number(decimals = 3)
# Chunk 4
#| fig-height: 8
#| fig-width: 11
#| echo: false
ggplot(gapm, aes(x = FemaleLiteracyRate,
y = LifeExpectancyYrs)) +
geom_point(size = 4) +
geom_smooth(method = "lm", se = FALSE, size = 3, colour="#F14124") +
labs(x = "Female literacy rate (%)",
y = "Life expectancy (years)",
title = "Relationship between life expectancy and \n the female literacy rate in 2011") +
theme(axis.title = element_text(size = 30),
axis.text = element_text(size = 25),
title = element_text(size = 30))
# Chunk 6
#| echo: false
#| fig-align: center
regression_points <- augment(model1)
# summary(model1)
# sum(model1$residuals^2)
my <- mean(gapm$LifeExpectancyYrs, na.rm=T)
ggplot(regression_points,
aes(x = FemaleLiteracyRate,
y = LifeExpectancyYrs)) +
geom_hline(yintercept = my, color = "#A7EA52", size = 3) +
geom_segment(aes(
xend = FemaleLiteracyRate,
yend = .fitted),
alpha = 1,
color = "#4FADF3",
size = 2) +
geom_smooth(method = "lm", se = FALSE, color = "#F14124", size=3) +
# > Color adjustments made here...
geom_point(color = "black", size = 4) +  # Color mapped here
#scale_color_gradient2(low = "#213c96", mid = "white", high = "#F14124") +  # Colors to use here
#guides(color = "none") +
geom_point(aes(y = .fitted), shape = 1, size = 4) +
labs(x = "Female literacy rate (%)",
y = "Life expectancy (years)",
title = "Life expectancy vs. female literacy rate in 2011") +
theme(axis.title = element_text(size = 20),
axis.text = element_text(size = 20),
title = element_text(size = 20))
# Chunk 7
# Fit regression model:
model1 <- gapm %>% lm(formula = LifeExpectancyYrs ~ FemaleLiteracyRate)
anova(model1)
anova(model1) %>% tidy() %>% gt() %>%
tab_options(table.font.size = 40) %>%
fmt_number(decimals = 3)
# Chunk 8
nobs(model1)
# Chunk 9
anova(model1) %>% tidy() %>% gt() %>%
tab_options(table.font.size = 40)
# Chunk 10
# p-value is ALWAYS the right tail for F-test
pf(54.414, df1 = 1, df2 = 78, lower.tail = FALSE)
# Chunk 11
anova(model1) %>% tidy() %>% gt() %>%
tab_options(table.font.size = 40)
# Chunk 12
tidy(model1) %>% gt() %>%
tab_options(table.font.size = 40)
# Chunk 13
anova(model1) %>% tidy() %>% gt() %>%
tab_options(table.font.size = 40)
# Chunk 14
#| echo: false
means_LE = gapm %>%
group_by(four_regions) %>%
summarise(mean = mean(LifeExpectancyYrs))
# Chunk 15
#| echo: false
ggplot(gapm, aes(x = four_regions, y = LifeExpectancyYrs)) +
geom_jitter(size = 1, alpha = .6, width = 0.2) +
stat_summary(fun = mean, geom = "point", size = 8, shape = 18) +
labs(x = "World region",
y = "Country life expectancy (years)",
title = "Life expectancy vs. world region",
caption = "Diamonds = region averages") +
theme(axis.title = element_text(size = 22),
axis.text = element_text(size = 22),
title = element_text(size = 22))
# Chunk 16
nobs(model1)
# Chunk 17
model2 <- gapm %>% lm(formula = LifeExpectancyYrs ~ four_regions)
anova(model2) %>% tidy() %>% gt() %>%
tab_options(table.font.size = 40)
anova_wr
#| echo: false
anova_wr = anova(model2)
anova_wr
anova_wr$`Mean Sq`[1]
anova_wr$`F value`
#| echo: false
anova_wr = anova(model2) %>% tidy()
anova_wr$meansq
anova_wr$statistic
# Chunk 1: "setup"
#| label: "setup"
#| include: false
#| message: false
#| warning: false
library(tidyverse)
library(openintro)
library(janitor)
library(rstatix)
library(knitr)
library(gtsummary)
library(moderndive)
library(gt)
library(broom)
library(here)
library(pwr)
library(gridExtra)   # grid.arrange()
library(readxl)
library(describedata) # gladder()
library(gridExtra)   # grid.arrange()
library(ggfortify)  # autoplot(model)
library(gtsummary)
library(broom.helpers)
knitr::opts_chunk$set(echo = TRUE, fig.height=3, fig.width=5,
message = FALSE, warning = FALSE)
# Chunk 2
#| include: false
#| message: false
#| warning: false
gapm1 <- read_excel(here("data/Gapminder_vars_2011.xlsx"), na = "NA")
gapm <- gapm1 %>% drop_na(LifeExpectancyYrs, FemaleLiteracyRate)
# Chunk 3
#| echo: false
model1 <- lm(LifeExpectancyYrs ~
FemaleLiteracyRate,
data = gapm)
# Get regression table:
tidy(model1) %>% gt() %>%
tab_options(table.font.size = 37) %>%
fmt_number(decimals = 2)
# Chunk 4
#| fig-height: 8
#| fig-width: 11
#| echo: false
ggplot(gapm, aes(x = FemaleLiteracyRate,
y = LifeExpectancyYrs)) +
geom_point(size = 4) +
geom_smooth(method = "lm", se = FALSE, size = 3, colour="#F14124") +
labs(x = "Female literacy rate (%)",
y = "Life expectancy (years)",
title = "Relationship between life expectancy and \n the female literacy rate in 2011") +
theme(axis.title = element_text(size = 30),
axis.text = element_text(size = 25),
title = element_text(size = 30))
# Chunk 5
#| message: false
#| echo: false
#| fig-height: 8
#| fig-width: 11
#| fig-align: center
# code from https://drsimonj.svbtle.com/visualising-residuals
model1 <- lm(LifeExpectancyYrs ~ FemaleLiteracyRate,
data = gapm)
regression_points <- augment(model1)
# summary(model1)
# sum(model1$residuals^2)
ggplot(regression_points,
aes(x = FemaleLiteracyRate,
y = LifeExpectancyYrs)) +
geom_segment(aes(
xend = FemaleLiteracyRate,
yend = .fitted),
alpha = 1,
color = "#4FADF3",
size = 2) +
geom_smooth(method = "lm", se = FALSE, color = "#F14124", size=3) +
# > Color adjustments made here...
geom_point(color = "black", size = 4) +  # Color mapped here
#scale_color_gradient2(low = "#213c96", mid = "white", high = "#F14124") +  # Colors to use here
#guides(color = "none") +
geom_point(aes(y = .fitted), shape = 1, size = 4) +
labs(x = "Female literacy rate (%)",
y = "Life expectancy (years)") +
theme(axis.title = element_text(size = 30),
axis.text = element_text(size = 25),
title = element_text(size = 30))
# Chunk 6
aug1 <- augment(model1)
glimpse(aug1)
# Chunk 7
#| fig-height: 4.5
#| fig-width: 7
#| fig-align: center
#| eval: false
ggplot(data = aug1) +
geom_histogram(aes(x = .std.resid))
# Chunk 8
#| fig-height: 5
#| fig-width: 7.5
#| fig-align: center
#| echo: false
ggplot(data = aug1) +
geom_histogram(aes(x = .std.resid))  +
theme(axis.title = element_text(size = 30),
axis.text = element_text(size = 25))
# Chunk 9
#| echo: false
# names(gapm)
# names(aug1)
gapm = gapm %>% mutate(.rownames = 1:n() %>% as.character())
aug1
gapm
aug1 = left_join(aug1, gapm,
by = c(".rownames",
"LifeExpectancyYrs",
"FemaleLiteracyRate"))
# names(gapm)
# names(aug1)
gapm = gapm %>% mutate(.rownames = 1:n() %>% as.character())
View(gapm)
aug1
names(gapm)
names(aug1)
aug1 = left_join(aug1, gapm,
by = c("LifeExpectancyYrs",
"FemaleLiteracyRate"))
View(aug1)
aug1 = aug1 %>%
relocate(country, .before = LifeExpectancyYrs) %>%
relocate(.std.resid, .after = FemaleLiteracyRate)
# Chunk 1: "setup"
#| label: "setup"
#| include: false
#| message: false
#| warning: false
library(tidyverse)
library(openintro)
library(janitor)
library(rstatix)
library(knitr)
library(gtsummary)
library(moderndive)
library(gt)
library(broom)
library(here)
library(pwr)
library(gridExtra)   # grid.arrange()
library(readxl)
library(describedata) # gladder()
library(gridExtra)   # grid.arrange()
library(ggfortify)  # autoplot(model)
library(gtsummary)
library(broom.helpers)
knitr::opts_chunk$set(echo = TRUE, fig.height=3, fig.width=5,
message = FALSE, warning = FALSE)
# Chunk 2
#| include: false
#| message: false
#| warning: false
gapm1 <- read_excel(here("data/Gapminder_vars_2011.xlsx"), na = "NA")
gapm <- gapm1 %>% drop_na(LifeExpectancyYrs, FemaleLiteracyRate)
# Chunk 4
#| echo: false
model1 <- lm(LifeExpectancyYrs ~
FemaleLiteracyRate,
data = gapm)
# Get regression table:
tidy(model1) %>% gt() %>%
tab_options(table.font.size = 37) %>%
fmt_number(decimals = 2)
# Chunk 5
#| fig-height: 8
#| fig-width: 11
#| echo: false
ggplot(gapm, aes(x = FemaleLiteracyRate,
y = LifeExpectancyYrs)) +
geom_point(size = 4) +
geom_smooth(method = "lm", se = FALSE, size = 3, colour="#F14124") +
labs(x = "Female literacy rate (%)",
y = "Life expectancy (years)",
title = "Relationship between life expectancy and \n the female literacy rate in 2011") +
theme(axis.title = element_text(size = 30),
axis.text = element_text(size = 25),
title = element_text(size = 30))
# Chunk 6
#| message: false
#| echo: false
#| fig-height: 8
#| fig-width: 11
#| fig-align: center
# code from https://drsimonj.svbtle.com/visualising-residuals
model1 <- lm(LifeExpectancyYrs ~ FemaleLiteracyRate,
data = gapm)
regression_points <- augment(model1)
# summary(model1)
# sum(model1$residuals^2)
ggplot(regression_points,
aes(x = FemaleLiteracyRate,
y = LifeExpectancyYrs)) +
geom_segment(aes(
xend = FemaleLiteracyRate,
yend = .fitted),
alpha = 1,
color = "#4FADF3",
size = 2) +
geom_smooth(method = "lm", se = FALSE, color = "#F14124", size=3) +
# > Color adjustments made here...
geom_point(color = "black", size = 4) +  # Color mapped here
#scale_color_gradient2(low = "#213c96", mid = "white", high = "#F14124") +  # Colors to use here
#guides(color = "none") +
geom_point(aes(y = .fitted), shape = 1, size = 4) +
labs(x = "Female literacy rate (%)",
y = "Life expectancy (years)") +
theme(axis.title = element_text(size = 30),
axis.text = element_text(size = 25),
title = element_text(size = 30))
# Chunk 7
aug1 <- augment(model1)
glimpse(aug1)
# Chunk 8
#| fig-height: 4.5
#| fig-width: 7
#| fig-align: center
#| eval: false
ggplot(data = aug1) +
geom_histogram(aes(x = .std.resid))
# Chunk 9
#| fig-height: 5
#| fig-width: 7.5
#| fig-align: center
#| echo: false
ggplot(data = aug1) +
geom_histogram(aes(x = .std.resid))  +
theme(axis.title = element_text(size = 30),
axis.text = element_text(size = 25))
# Chunk 10
#| echo: false
# names(gapm)
# names(aug1)
# Chunk 11
#| echo: false
aug1 = left_join(aug1, gapm,
by = c("LifeExpectancyYrs",
"FemaleLiteracyRate"))
aug1 = aug1 %>%
relocate(country, .before = LifeExpectancyYrs) %>%
relocate(.std.resid, .after = FemaleLiteracyRate)
# Chunk 12
aug1 %>%
filter(abs(.std.resid) > 3)
# Chunk 13
#| fig-align: center
ggplot(aug1, aes(x = FemaleLiteracyRate, y = LifeExpectancyYrs,
label = country)) +
geom_point() +
geom_smooth(method = "lm", color = "darkgreen") +
geom_text(aes(label = ifelse(abs(.std.resid) > 3, as.character(country), ''))) +
geom_vline(xintercept = mean(aug1$FemaleLiteracyRate), color = "grey") +
geom_hline(yintercept = mean(aug1$LifeExpectancyYrs), color = "grey")
View(aug1)
ID_no_outliers <- aug1 %>%
filter(abs(.std.resid) <= 2)
View(ID_no_outliers)
4/80
aug1 %>% arrange(desc(.cooksd)) %>% as.data.frame()
#| fig-align: center
plot(model1)
