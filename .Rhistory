library(broom)
library(here)
library(pwr)
library(gridExtra) # NEW!!!
library(readxl)
# terminal: for icons
# quarto install extension quarto-ext/fontawesome
# set ggplot theme for slides
theme_set(theme_gray(base_size = 22))
# theme_update(text = element_text(size=16))  # set global text size for ggplots
# Chunk 2
#| include: false
#| message: false
#| warning: false
gapm1 <- read_excel(here("data/Gapminder_vars_2011.xlsx"), na = "NA")
gapm <- gapm1 %>% drop_na(LifeExpectancyYrs, FemaleLiteracyRate)
# Chunk 3
#| include: false
#| message: false
#| warning: false
# Fit regression model:
model1 <- gapm %>% lm(formula = LifeExpectancyYrs ~ FemaleLiteracyRate)
reg_table = tidy(model1) %>% gt() %>%
tab_options(table.font.size = 40) %>%
fmt_number(decimals = 3)
# Chunk 4
#| fig-height: 8
#| fig-width: 11
#| echo: false
ggplot(gapm, aes(x = FemaleLiteracyRate,
y = LifeExpectancyYrs)) +
geom_point(size = 4) +
geom_smooth(method = "lm", se = FALSE, size = 3, colour="#F14124") +
labs(x = "Female literacy rate (%)",
y = "Life expectancy (years)",
title = "Relationship between life expectancy and \n the female literacy rate in 2011") +
theme(axis.title = element_text(size = 30),
axis.text = element_text(size = 25),
title = element_text(size = 30))
# Chunk 6
#| echo: false
#| fig-align: center
regression_points <- augment(model1)
# summary(model1)
# sum(model1$residuals^2)
my <- mean(gapm$LifeExpectancyYrs, na.rm=T)
ggplot(regression_points,
aes(x = FemaleLiteracyRate,
y = LifeExpectancyYrs)) +
geom_hline(yintercept = my, color = "#A7EA52", size = 3) +
geom_segment(aes(
xend = FemaleLiteracyRate,
yend = .fitted),
alpha = 1,
color = "#4FADF3",
size = 2) +
geom_smooth(method = "lm", se = FALSE, color = "#F14124", size=3) +
# > Color adjustments made here...
geom_point(color = "black", size = 4) +  # Color mapped here
#scale_color_gradient2(low = "#213c96", mid = "white", high = "#F14124") +  # Colors to use here
#guides(color = "none") +
geom_point(aes(y = .fitted), shape = 1, size = 4) +
labs(x = "Female literacy rate (%)",
y = "Life expectancy (years)",
title = "Life expectancy vs. female literacy rate in 2011") +
theme(axis.title = element_text(size = 20),
axis.text = element_text(size = 20),
title = element_text(size = 20))
# Chunk 7
# Fit regression model:
model1 <- gapm %>% lm(formula = LifeExpectancyYrs ~ FemaleLiteracyRate)
anova(model1)
anova(model1) %>% tidy() %>% gt() %>%
tab_options(table.font.size = 40) %>%
fmt_number(decimals = 3)
# Chunk 8
nobs(model1)
# Chunk 9
anova(model1) %>% tidy() %>% gt() %>%
tab_options(table.font.size = 40)
# Chunk 10
# p-value is ALWAYS the right tail for F-test
pf(54.414, df1 = 1, df2 = 78, lower.tail = FALSE)
# Chunk 11
anova(model1) %>% tidy() %>% gt() %>%
tab_options(table.font.size = 40)
# Chunk 12
tidy(model1) %>% gt() %>%
tab_options(table.font.size = 40)
# Chunk 13
anova(model1) %>% tidy() %>% gt() %>%
tab_options(table.font.size = 40)
# Chunk 14
#| echo: false
means_LE = gapm %>%
group_by(four_regions) %>%
summarise(mean = mean(LifeExpectancyYrs))
# Chunk 15
#| echo: false
ggplot(gapm, aes(x = four_regions, y = LifeExpectancyYrs)) +
geom_jitter(size = 1, alpha = .6, width = 0.2) +
stat_summary(fun = mean, geom = "point", size = 8, shape = 18) +
labs(x = "World region",
y = "Country life expectancy (years)",
title = "Life expectancy vs. world region",
caption = "Diamonds = region averages") +
theme(axis.title = element_text(size = 22),
axis.text = element_text(size = 22),
title = element_text(size = 22))
# Chunk 16
nobs(model1)
# Chunk 17
model2 <- gapm %>% lm(formula = LifeExpectancyYrs ~ four_regions)
anova(model2) %>% tidy() %>% gt() %>%
tab_options(table.font.size = 40)
anova_wr
#| echo: false
anova_wr = anova(model2)
anova_wr
anova_wr$`Mean Sq`[1]
anova_wr$`F value`
#| echo: false
anova_wr = anova(model2) %>% tidy()
anova_wr$meansq
anova_wr$statistic
# Chunk 1: "setup"
#| label: "setup"
#| include: false
#| message: false
#| warning: false
library(tidyverse)
library(openintro)
library(janitor)
library(rstatix)
library(knitr)
library(gtsummary)
library(moderndive)
library(gt)
library(broom)
library(here)
library(pwr)
library(gridExtra)   # grid.arrange()
library(readxl)
library(describedata) # gladder()
library(gridExtra)   # grid.arrange()
library(ggfortify)  # autoplot(model)
library(gtsummary)
library(broom.helpers)
knitr::opts_chunk$set(echo = TRUE, fig.height=3, fig.width=5,
message = FALSE, warning = FALSE)
# Chunk 2
#| include: false
#| message: false
#| warning: false
gapm1 <- read_excel(here("data/Gapminder_vars_2011.xlsx"), na = "NA")
gapm <- gapm1 %>% drop_na(LifeExpectancyYrs, FemaleLiteracyRate)
# Chunk 3
#| echo: false
model1 <- lm(LifeExpectancyYrs ~
FemaleLiteracyRate,
data = gapm)
# Get regression table:
tidy(model1) %>% gt() %>%
tab_options(table.font.size = 37) %>%
fmt_number(decimals = 2)
# Chunk 4
#| fig-height: 8
#| fig-width: 11
#| echo: false
ggplot(gapm, aes(x = FemaleLiteracyRate,
y = LifeExpectancyYrs)) +
geom_point(size = 4) +
geom_smooth(method = "lm", se = FALSE, size = 3, colour="#F14124") +
labs(x = "Female literacy rate (%)",
y = "Life expectancy (years)",
title = "Relationship between life expectancy and \n the female literacy rate in 2011") +
theme(axis.title = element_text(size = 30),
axis.text = element_text(size = 25),
title = element_text(size = 30))
# Chunk 5
#| message: false
#| echo: false
#| fig-height: 8
#| fig-width: 11
#| fig-align: center
# code from https://drsimonj.svbtle.com/visualising-residuals
model1 <- lm(LifeExpectancyYrs ~ FemaleLiteracyRate,
data = gapm)
regression_points <- augment(model1)
# summary(model1)
# sum(model1$residuals^2)
ggplot(regression_points,
aes(x = FemaleLiteracyRate,
y = LifeExpectancyYrs)) +
geom_segment(aes(
xend = FemaleLiteracyRate,
yend = .fitted),
alpha = 1,
color = "#4FADF3",
size = 2) +
geom_smooth(method = "lm", se = FALSE, color = "#F14124", size=3) +
# > Color adjustments made here...
geom_point(color = "black", size = 4) +  # Color mapped here
#scale_color_gradient2(low = "#213c96", mid = "white", high = "#F14124") +  # Colors to use here
#guides(color = "none") +
geom_point(aes(y = .fitted), shape = 1, size = 4) +
labs(x = "Female literacy rate (%)",
y = "Life expectancy (years)") +
theme(axis.title = element_text(size = 30),
axis.text = element_text(size = 25),
title = element_text(size = 30))
# Chunk 6
aug1 <- augment(model1)
glimpse(aug1)
# Chunk 7
#| fig-height: 4.5
#| fig-width: 7
#| fig-align: center
#| eval: false
ggplot(data = aug1) +
geom_histogram(aes(x = .std.resid))
# Chunk 8
#| fig-height: 5
#| fig-width: 7.5
#| fig-align: center
#| echo: false
ggplot(data = aug1) +
geom_histogram(aes(x = .std.resid))  +
theme(axis.title = element_text(size = 30),
axis.text = element_text(size = 25))
# Chunk 9
#| echo: false
# names(gapm)
# names(aug1)
gapm = gapm %>% mutate(.rownames = 1:n() %>% as.character())
aug1
gapm
aug1 = left_join(aug1, gapm,
by = c(".rownames",
"LifeExpectancyYrs",
"FemaleLiteracyRate"))
# names(gapm)
# names(aug1)
gapm = gapm %>% mutate(.rownames = 1:n() %>% as.character())
View(gapm)
aug1
names(gapm)
names(aug1)
aug1 = left_join(aug1, gapm,
by = c("LifeExpectancyYrs",
"FemaleLiteracyRate"))
View(aug1)
aug1 = aug1 %>%
relocate(country, .before = LifeExpectancyYrs) %>%
relocate(.std.resid, .after = FemaleLiteracyRate)
# Chunk 1: "setup"
#| label: "setup"
#| include: false
#| message: false
#| warning: false
library(tidyverse)
library(openintro)
library(janitor)
library(rstatix)
library(knitr)
library(gtsummary)
library(moderndive)
library(gt)
library(broom)
library(here)
library(pwr)
library(gridExtra)   # grid.arrange()
library(readxl)
library(describedata) # gladder()
library(gridExtra)   # grid.arrange()
library(ggfortify)  # autoplot(model)
library(gtsummary)
library(broom.helpers)
knitr::opts_chunk$set(echo = TRUE, fig.height=3, fig.width=5,
message = FALSE, warning = FALSE)
# Chunk 2
#| include: false
#| message: false
#| warning: false
gapm1 <- read_excel(here("data/Gapminder_vars_2011.xlsx"), na = "NA")
gapm <- gapm1 %>% drop_na(LifeExpectancyYrs, FemaleLiteracyRate)
# Chunk 4
#| echo: false
model1 <- lm(LifeExpectancyYrs ~
FemaleLiteracyRate,
data = gapm)
# Get regression table:
tidy(model1) %>% gt() %>%
tab_options(table.font.size = 37) %>%
fmt_number(decimals = 2)
# Chunk 5
#| fig-height: 8
#| fig-width: 11
#| echo: false
ggplot(gapm, aes(x = FemaleLiteracyRate,
y = LifeExpectancyYrs)) +
geom_point(size = 4) +
geom_smooth(method = "lm", se = FALSE, size = 3, colour="#F14124") +
labs(x = "Female literacy rate (%)",
y = "Life expectancy (years)",
title = "Relationship between life expectancy and \n the female literacy rate in 2011") +
theme(axis.title = element_text(size = 30),
axis.text = element_text(size = 25),
title = element_text(size = 30))
# Chunk 6
#| message: false
#| echo: false
#| fig-height: 8
#| fig-width: 11
#| fig-align: center
# code from https://drsimonj.svbtle.com/visualising-residuals
model1 <- lm(LifeExpectancyYrs ~ FemaleLiteracyRate,
data = gapm)
regression_points <- augment(model1)
# summary(model1)
# sum(model1$residuals^2)
ggplot(regression_points,
aes(x = FemaleLiteracyRate,
y = LifeExpectancyYrs)) +
geom_segment(aes(
xend = FemaleLiteracyRate,
yend = .fitted),
alpha = 1,
color = "#4FADF3",
size = 2) +
geom_smooth(method = "lm", se = FALSE, color = "#F14124", size=3) +
# > Color adjustments made here...
geom_point(color = "black", size = 4) +  # Color mapped here
#scale_color_gradient2(low = "#213c96", mid = "white", high = "#F14124") +  # Colors to use here
#guides(color = "none") +
geom_point(aes(y = .fitted), shape = 1, size = 4) +
labs(x = "Female literacy rate (%)",
y = "Life expectancy (years)") +
theme(axis.title = element_text(size = 30),
axis.text = element_text(size = 25),
title = element_text(size = 30))
# Chunk 7
aug1 <- augment(model1)
glimpse(aug1)
# Chunk 8
#| fig-height: 4.5
#| fig-width: 7
#| fig-align: center
#| eval: false
ggplot(data = aug1) +
geom_histogram(aes(x = .std.resid))
# Chunk 9
#| fig-height: 5
#| fig-width: 7.5
#| fig-align: center
#| echo: false
ggplot(data = aug1) +
geom_histogram(aes(x = .std.resid))  +
theme(axis.title = element_text(size = 30),
axis.text = element_text(size = 25))
# Chunk 10
#| echo: false
# names(gapm)
# names(aug1)
# Chunk 11
#| echo: false
aug1 = left_join(aug1, gapm,
by = c("LifeExpectancyYrs",
"FemaleLiteracyRate"))
aug1 = aug1 %>%
relocate(country, .before = LifeExpectancyYrs) %>%
relocate(.std.resid, .after = FemaleLiteracyRate)
# Chunk 12
aug1 %>%
filter(abs(.std.resid) > 3)
# Chunk 13
#| fig-align: center
ggplot(aug1, aes(x = FemaleLiteracyRate, y = LifeExpectancyYrs,
label = country)) +
geom_point() +
geom_smooth(method = "lm", color = "darkgreen") +
geom_text(aes(label = ifelse(abs(.std.resid) > 3, as.character(country), ''))) +
geom_vline(xintercept = mean(aug1$FemaleLiteracyRate), color = "grey") +
geom_hline(yintercept = mean(aug1$LifeExpectancyYrs), color = "grey")
View(aug1)
ID_no_outliers <- aug1 %>%
filter(abs(.std.resid) <= 2)
View(ID_no_outliers)
4/80
aug1 %>% arrange(desc(.cooksd)) %>% as.data.frame()
#| fig-align: center
plot(model1)
# Chunk 1: "setup"
#| label: "setup"
#| include: false
#| message: false
#| warning: false
library(tidyverse)
library(janitor)
library(knitr)
library(broom)
library(rstatix)
library(gt)
library(readxl)
#----------
# new packages
# install.packages("describedata")
library(describedata) # gladder()
library(gridExtra)   # grid.arrange()
library(ggfortify)  # autoplot(model)
# New Day 6
library(gtsummary)
# New Day 7
library(plotly) # for plot_ly() command
library(GGally) # for ggpairs() command
library(ggiraphExtra)   # for ggPredict() command
# Chunk 3
# Load the data - update code if the file is not in the same location
# on your computer
gapm <- read_excel("data/Gapminder_vars_2011.xlsx",
na = "NA")  # important!!!!
gapm_sub <- gapm %>%
drop_na(LifeExpectancyYrs, FemaleLiteracyRate, FoodSupplykcPPD)
# above drops rows with NAs in any of the three variables
glimpse(gapm_sub)
# Chunk 4
#| echo: false
plot_LE_FLR <- ggplot(gapm_sub, aes(x = FemaleLiteracyRate,
y = LifeExpectancyYrs)) +
geom_point() +
geom_smooth() +
geom_smooth(method = "lm", color = "#F14124") +
labs(title = "Life expectancy vs.\n female literacy rate",
x = "Female Litaracy Rate (%)",
y = "Life Expectancy (yrs)") +
theme(axis.title = element_text(size = 10),
axis.text = element_text(size = 10),
title = element_text(size = 10))
plot_LE_FS <- ggplot(gapm_sub, aes(x = FoodSupplykcPPD,
y = LifeExpectancyYrs)) +
geom_point() +
geom_smooth() +
geom_smooth(method = "lm", color = "#F14124") +
labs(title = "Life expectancy vs. \n food supply",
x = "Food supply (kcal PPD)",
y = "Life Expectancy (yrs)") +
theme(axis.title = element_text(size = 10),
axis.text = element_text(size = 10),
title = element_text(size = 10))
plot_FLR_FS <- ggplot(gapm_sub, aes(x = FoodSupplykcPPD,
y = FemaleLiteracyRate)) +
geom_point() +
geom_smooth() +
geom_smooth(method = "lm", color = "#F14124") +
labs(title = "Female literacy rate vs. \n food supply",
y = "Female Litaracy Rate (%)",
x = "Food supply (kcal PPD)") +
theme(axis.title = element_text(size = 10),
axis.text = element_text(size = 10),
title = element_text(size = 10))
grid.arrange(plot_LE_FLR, plot_LE_FS, plot_FLR_FS,
nrow = 1)
# Chunk 5
#| echo: false
#| fig-align: center
# plotly package is require for plot_ly function, which is loaded at beginning of Rmd
# z = response variable
# x & y are predictor variables
dim3_scatter <- plot_ly(gapm_sub,
x = ~FemaleLiteracyRate,
y = ~FoodSupplykcPPD,
z = ~LifeExpectancyYrs) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'Female literacy rate'),
yaxis = list(title = 'Food supply (kc PPD)'),
zaxis = list(title = 'Life expectancy')))
dim3_scatter
# Chunk 6
# Fit regression model:
mr1 <- lm(LifeExpectancyYrs ~ FemaleLiteracyRate + FoodSupplykcPPD,
data = gapm_sub)
tidy(mr1, conf.int=T) %>% gt() %>% tab_options(table.font.size = 35) %>% fmt_number(decimals = 3)
# Chunk 7
summary(mr1)
mr1_tidy = tidy(mr1, conf.int=T)
mr1_tidy$estimate[1]
round(mr1_tidy$estimate[1], 3)
?anova
anova.lm
car::Anova(mr1) %>% tidy() %>% gt() %>%
tab_options(table.font.size = 40) %>% fmt_number(decimals = 3)
SSY_plot = ggplot(SS_df, aes(SSY_dev)) + geom_histogram() + xlim(-30, 30) + ylim(0, 35) + xlab(expression((Y_i - \overline{Y})))
library(here)
# Chunk 1
#| message: false
library(tidyverse)
library(gtsummary)
library(here)
if(!require(lubridate)) { install.packages("lubridate"); library(lubridate) }
load(file = here("../TA_files/Project/data/IAT_data.rda"))
iat_prep = iat_2021_raw %>%
select(IAT_score = D_biep.Thin_Good_all,
att7, iam_001, identfat_001,
myweight_002, myheight_002,
identthin_001, controlother_001,
controlyou_001, mostpref_001,
important_001,
birthmonth, birthyear, month, year,
raceomb_002, raceombmulti, ethnicityomb,
edu, edu_14,
genderIdentity,
birthSex)
