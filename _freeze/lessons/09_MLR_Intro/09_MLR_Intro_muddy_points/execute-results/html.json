{
  "hash": "b219c851ef7d9d860b90f999f6e9c548",
  "result": {
    "markdown": "---\ntitle: \"Muddy Points\"\nsubtitle: \"Lesson 9: MLR Intro\"\ndate-modified: \"today\"\nformat: \n  html:\n    link-external-newwindow: true\neditor_options: \n  chunk_output_type: console\n---\n\n\n## Muddy Points from Winter 2025\n\n## Muddy Points from Winter 2024\n\n### 1. Why is it not called multivariate?\n\nMultivariate models refer to models that have multiple outcomes. In multiple/multivariable models, we still only have one outcome, $Y$, but multiple predictors.\n\n### 2. When adjusting for another variable, how do we calculate the new slope and intercept?\n\nFirst, I want to clarify one thing: in the case of two covariates, we only have the best fit plane. The intercept is really just a placeholder for when the covariates are 0. And the coefficients for each covariate are no longer stand alone slopes, unless we examine a specific instance when one covariate takes on a realized value. (Okay, that was kinda a lot of vague language. Let's go to our example.)\n\nFor $$\\widehat{\\text{LE}} = 33.595 + 0.157\\ \\text{FLR} \n+ 0.008\\ \\text{FS}$$, we have a regression plane.\n\nWhen we derive the regression lines for either variable, FLR or FS, we can think of the other variable as part of the intercept for the line:\n\nFor FLR: $$\\widehat{\\text{LE}} = [33.595 + 0.008\\ \\text{FS}] + 0.157\\ \\text{FLR} $$ For FS: $$\\widehat{\\text{LE}} = [33.595 + 0.157\\ \\text{FLR}]\n+ 0.008\\ \\text{FS}$$\n\nFor FLR, any given FS value will result in the same slope, but the intercept will change. That's why we say \"holding FS constant,\" \"adjusting for FS,\" or \"controlling for FS\" when we discuss the $\\widehat\\beta_1=0.157$ estimate. Depending on the FS value, the intercept will change. So we can write: $$(\\widehat{\\text{LE}}|FS=3000) = [33.595 + 0.008\\cdot 3000] + 0.157\\ \\text{FLR}= 57.595 + 0.157\\ \\text{FLR}$$\n\nTry going through the same process for FS when FLR is 30%.\n\n### 3. I know we can't really do visualizations past 3 coefficients but I still can't really wrap my head around how this will work once we add a third covariate to the model.\n\nYeah... this is a tough one! You can try to think of the fitted Y $\\widehat{Y}|X$ as being built from all the covariate values, and really just the equation for the best-fit line that we estimate. At three covariates, we need to let go of some of the visualizations.\n\n### 4. Still a little unsure about OLS\n\nI was going to write out an explanation to this, but then I wrote my explanation to the below question. I honestly think it helps bring context to OLS and talk about it in a new way that might help if it's been confusing so far.\n\n### 5. We keep getting back to $\\widehat{Y}$, $Y_i$, and $\\overline{Y}$ and their relationship to the population parameter estimates. Can you clarify this?\n\nI think it'll be helpful to use the dataset I created from our quiz. I still think this relationship is best communicated with simple linear regression. What you didn't see on the quiz was that I simulated the data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(444) # Set the seed so that every time I run this I get the same results\nx = runif(n=200, min = 40, max = 85) # I am sampling 200 points from a uniform distribution with minimum value 40 and maximum value 85\ny = rnorm(n=200, 215 - 0.85*x, 13) # Then I can construct my y-observations based on x. Notice that 215 is the true, underlying intercept and -0.85 is the true underlying slope\ndf = data.frame(Age = x, HR = y) # Then I combine these into a dataframe\n```\n:::\n\n\nThen we can look at the scatterplot:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nggplot(df, aes(x = x, y = y)) +\n  geom_point(size = 1) +\n  geom_smooth(method = \"lm\", se = FALSE, linewidth = 1, colour=\"#F14124\") +\n  labs(x = \"Age (years)\", \n       y = \"Peak exercise heart rate (bpm)\",\n       title = \"Peak exercise heart rate vs. Age\") +\n    theme(axis.title = element_text(size = 11), \n        axis.text = element_text(size = 11), \n        title = element_text(size = 11))\n```\n\n::: {.cell-output-display}\n![](09_MLR_Intro_muddy_points_files/figure-html/unnamed-chunk-2-1.png){fig-align='center' width=384}\n:::\n:::\n\n\n-   Each point represents an observation $(X_i, Y_i)$. That is where we get $Y_i$ from\n\n-   The red line represents $\\widehat{Y}$. We can look at each $\\widehat{Y}|X$, so we look at the expected $Y$ at a specific age like 70 years old.\n\n-   Now we need to find $\\overline{Y}$. This does not take $X$ into account. So we can look at the observed $Y$'s and find the mean\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    ggplot(df, aes(HR)) + geom_histogram()\n    ```\n    \n    ::: {.cell-output-display}\n    ![](09_MLR_Intro_muddy_points_files/figure-html/unnamed-chunk-3-1.png){fig-align='center' width=384}\n    :::\n    \n    ```{.r .cell-code}\n    mean(df$HR)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    [1] 162.8725\n    ```\n    :::\n    :::\n\n\nThen we can draw a line on the scatterplot for $\\overline{Y}$:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(df, aes(x = x, y = y)) +\n  geom_point(size = 1) +\n  geom_smooth(method = \"lm\", se = FALSE, linewidth = 1, colour=\"#F14124\") +\n  labs(x = \"Age (years)\", \n       y = \"Peak exercise heart rate (bpm)\",\n       title = \"Peak exercise heart rate vs. Age\") +\n    theme(axis.title = element_text(size = 11), \n        axis.text = element_text(size = 11), \n        title = element_text(size = 11)) +\n  geom_hline(yintercept = mean(df$HR), linewidth = 1, colour=\"green\")\n```\n\n::: {.cell-output-display}\n![](09_MLR_Intro_muddy_points_files/figure-html/unnamed-chunk-4-1.png){fig-align='center' width=384}\n:::\n:::\n\n\nWhen we talk about SSY (total variation), we can think of the histogram of the Y's\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(df, aes(HR)) + geom_histogram() + xlim(100, 225)\n```\n\n::: {.cell-output-display}\n![](09_MLR_Intro_muddy_points_files/figure-html/unnamed-chunk-5-1.png){fig-align='center' width=384}\n:::\n:::\n\n\nThen the total variation of these observed values is related to the $\\sum_{i=1}^n (Y_i - \\overline{Y})^2$. Let's plot $Y_i - \\overline{Y}$:\n\n\n::: {.cell}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndf = df %>% mutate(y_center = HR - mean(HR))\nggplot(df, aes(y_center)) + geom_histogram() + xlim(-60, 50)+ylim(0, 35)\n```\n\n::: {.cell-output-display}\n![](09_MLR_Intro_muddy_points_files/figure-html/unnamed-chunk-7-1.png){fig-align='center' width=384}\n:::\n:::\n\n\nHowever, we can fit a regression line to show the relationship between Y and X. For every observation $X_i$ there is a specific $\\widehat{Y}$ from the regression line. So if we take the difference between the mean Y and the fitted Y, then we get the variation that is explained by the regression.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmod1 = lm(HR ~ Age, data = df)\naug1 = augment(mod1)\ndf = df %>% mutate(fitted_y = aug1$.fitted, \n                   diff_mean_fit = fitted_y - mean(HR))\nggplot(df, aes(diff_mean_fit)) + geom_histogram() + xlim(-60, 50)+ylim(0, 35)\n```\n\n::: {.cell-output-display}\n![](09_MLR_Intro_muddy_points_files/figure-html/unnamed-chunk-8-1.png){fig-align='center' width=384}\n:::\n:::\n\n\nIn the plot above, there is variation! And it means that some of the variation in the plot of Y alone is actually coming from this variation explained by the regression model!!\n\nBut there is left over variation that is not explained by the model... What is that? It's related to our residuals: $\\widehat\\epsilon_i = Y_i - \\widehat{Y}_i$\n\nSo we'll calculate the residuals (or more appropriately, use the calculation of the residuals that R gave us)\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmod1 = lm(HR ~ Age, data = df)\naug1 = augment(mod1)\ndf = df %>% mutate(diff_y_fitted = aug1$.resid)\nggplot(df, aes(diff_y_fitted)) + geom_histogram() + xlim(-60, 50) +ylim(0, 35)\n```\n\n::: {.cell-output-display}\n![](09_MLR_Intro_muddy_points_files/figure-html/unnamed-chunk-9-1.png){fig-align='center' width=384}\n:::\n:::\n\n\nOur aim in regression (through ordinary least squares) is to minimize the variance in the above plot. The more variance our model can explain, the less variance in the residuals. In SLR, we can only explain so much variance with a single predictor. As we include more predictors in our model, the model has the opportunity to explain even MORE variance.",
    "supporting": [
      "09_MLR_Intro_muddy_points_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}