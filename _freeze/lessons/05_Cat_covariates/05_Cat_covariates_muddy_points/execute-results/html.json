{
  "hash": "d77777cb4827a33ee6244bee58e0a475",
  "result": {
    "markdown": "---\ntitle: \"Muddy Points\"\nsubtitle: \"Lesson 5: Categorical Covariates\"\ndate-modified: \"today\"\nformat: \n  html:\n    link-external-newwindow: true\neditor_options: \n  chunk_output_type: console\n---\n\n\n## Muddy Points from 2025\n\n### 1. I was a little confused on the part where if each categorical variable, with their respective betas, have each their own residuals for their respective category?\n\nResiduals are always tied to the expected outcome. Since each category has a different expected outcome (based on their respective estimated coefficients), the countries from same category will have the same expected outcome (in SLR). Thus, for countries in the same category, their residuals ($\\widehat{\\epsilon} = Y_i - \\widehat{Y_i}$) will all have the same $\\widehat{Y_i}$\n\n### 2. Factors: What was meant by in order to change the reference level, we need to convert it to data type factor? / Can you quickly explain what a factor is and why we had to convert to a factor to change the reference value?\n\nGood question! Factors is one of the coding options in R for categorical variables. Different from characters or strings, factors allow you to attach specific attributes to the variable. This includes assigning order to the categories and setting reference levels. \n\n### 3. I'm not really sure how using linear models on categorical variables is useful since you can't make predictions like you can with continuous data\n\nYou can make predictions! \"Predictions,\" for how we used it with continuous predictors/covariates, is just the expected outcome for a given X. For categorical covariates, the expected outcome given X is the mean of each categorical group. \n\nWith only one variable in the model, it might feel more appropriate to use something like the ANOVA table, but we do not typically have only one variable in the model. This is just to help us set up the foundation of linear regression and understand categorical covariates in our model before we move to multiple linear regression. \n\n## Muddy Points from 2024\n\n### 1. Why do we need to create a new variable for ordinal / scoring?\n\nOtherwise R will treat income as non-ordinal, and use the default reference cell coding. So if we want our variables to be scored (and numeric) then we must put it in a form R can recognize.\n\n### 2. I'm a little confused on how the R code works for recoding/reordering our variables, specifically 1) why we use the mutate function but then use the same name for the variable/how that works and 2) why you need to include the list of each variable name in a vector. Basically, what each piece of that code does exactly and why it's needed.\n\n1.  Mutate is just a function to create/change a variable. So if we are not fundamentally changing any aspect of the variable, we can call it by the same name. Helps keep our data frame neat by not tacking on additional variables.\n\n2.  When I am including the list of levels I am giving R the exact order to read each level. So if I want to go from high income to low income, I would reset the levels to the below code. Then R would read high income as the first level.\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    gapm2 = gapm2 %>%\n     mutate(income_levels = factor(income_levels, \n                ordered = T, \n                levels = c(\"High income\", \n                           \"Upper middle income\", \n                           \"Lower middle income\", \n                           \"Low income\")))\n    ```\n    :::\n\n\n### 3. Is there a rationale or strategy in choosing the most appropriate reference group?\n\nOften no, not if the groups are not ordered. Things that you may consider:\n\n-   Is there a central group that you want to make comparisons to?\n\n-   Is there any social consequences of continually centering comparisons to one group? We may be consequentially centering the narrative around that group.\n\n-   When we interpret the coefficients, is there one group as the reference that makes it a little easier to interpret? (this has more of an effect in 513)\n\n### 4. How do we build the regression indicators?\n\nIn R, we don't need to build the indicators. If we have a variable that is a facotr with mutually exclusive groups, then R will automatically create the indicators within the `lm()` function.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}