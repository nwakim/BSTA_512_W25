{
  "hash": "98e1edba9546982d170de4cdfc1eb546",
  "result": {
    "markdown": "---\ntitle: \"Lesson 2: Data and File Management\"\nsubtitle: \"Adapted from parts of Mine Çetinkaya-Rundel's tidyverse course\"\nauthor: \"Nicky Wakim\"\ntitle-slide-attributes:\n    data-background-color: \"#213c96\"\ndate: \"01/8/2025\"\nformat: \n  revealjs:\n    theme: \"../simple_NW.scss\"\n    chalkboard: true\n    slide-number: true\n    show-slide-number: all\n    width: 1955\n    height: 1100\n    footer: \"Lesson 2: Data Management\"\n    highlight-style: ayu\n---\n\n\n\n\n# What we will cover\n\n1. Introduction to `tidyverse`\n2. `ggplot2` revisited\n2. Functions for data management\n3. Functions for data summarization\n4. Folder organization\n5. `here` package and importing data\n\n \n\n- Not covered: basic Quarto set up. Please see R recordings in OneDrive and my [EPI 525 site](https://nwakim.github.io/F24_EPI_525/schedule.html) for videos and slides.\n\n\n::: {.cell}\n<style type=\"text/css\">\n.reveal code {\n  max-height: 100% !important;\n}\n</style>\n:::\n\n\n## \n\n![Artwork by \\@allison_horst](../img_slides/debugging.png){fig-alt=\"A cartoon of a fuzzy round monster face showing 10 different emotions experienced during the process of debugging code. The progression goes from (1) “I got this” - looking determined and optimistic; (2) “Huh. Really thought that was it.” - looking a bit baffled; (3) “...” - looking up at the ceiling in thought; (4) “Fine. Restarting.” - looking a bit annoyed; (5) “OH WTF.” Looking very frazzled and frustrated; (6) “Zombie meltdown.” - looking like a full meltdown; (7) (blank) - sleeping; (8) “A NEW HOPE!” - a happy looking monster with a lightbulb above; (9) “insert awesome theme song” - looking determined and typing away; (10) “I love coding” - arms raised in victory with a big smile, with confetti falling.\"}\n\n# Introduction to the `tidyverse`\n\n## \n\n![](../img_slides/spiderverse.jpeg){fig-align=\"center\"}\n\n## What is the tidyverse?\n\nThe **tidyverse** is a collection of R packages designed for data science. All packages share an underlying design philosophy, grammar, and data structures.\n\n::: columns\n::: {.column width=\"45%\"}\n-   **ggplot2** - data visualisation\n-   **dplyr** - data manipulation\n-   **tidyr** - tidy data\n-   **readr** - read rectangular data\n-   **purrr** - functional programming\n-   **tibble** - modern data frames\n-   **stringr** - string manipulation\n-   **forcats** - factors\n-   and many more ...\n:::\n\n::: {.column width=\"55%\"}\n![](../img_slides/tidyverse.png){fig-align=\"center\" width=\"669\"}\n:::\n:::\n\n## Tidy data[^1]\n\n[^1]: Source: R for Data Science. Grolemund and Wickham.\n\n![](../img_slides/tidy-data-frame.png){fig-align=\"center\" width=\"1500\"}\n\n\n1.  Each variable must have its own column.\n\n2.  Each observation must have its own row.\n\n3.  Each value must have its own cell.\n\n## Pipe operator (`magrittr`)\n\n-   The pipe operator (`%>%`) allows us to step through sequential functions in the same way we follow if-then statements or steps from instructions\n\n \n\n::: heq\nI want to find my keys, then start my car, then drive to work, then park my car.\n:::\n\n \n\n::: columns\n::: {.column width=\"50%\"}\n**Nested**\n\n\n::: {.cell}\n\n```{.r .cell-code}\npark(drive(start_car(find(\"keys\")), \n           to = \"work\"))\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n**Piped**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfind(\"keys\") %>%\n  start_car() %>%\n  drive(to = \"work\") %>%\n  park()\n```\n:::\n\n:::\n:::\n\n## Recoding a binary variable with pipe operator\n\n \n\n::: heq\nLet's say I want a variable `transmission` to show the category names that are assigned to numeric values in the code. I want `0` to be coded as `automatic` and `1` to be coded as `manual`.\n:::\n\n \n\n::: columns\n::: {.column width=\"50%\"}\nBase R:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars$transmission <-\n  ifelse(\n    mtcars$am == 0,\n    \"automatic\",\n    \"manual\"\n  )\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\nTidyverse:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars <- mtcars %>%\n  mutate(\n    transmission = case_when(\n      am == 0 ~ \"automatic\",\n      am == 1 ~ \"manual\"\n    )\n  )\n```\n:::\n\n\n \n\n::: hl\n`mutate()` creates new columns that are functions of existing variables\n:::\n:::\n:::\n\n## Recoding a multi-level variable\n\n \n\n::: heq\nLet's say I want a variable `gear` to show the category names that are assigned to numeric values in the code. I want `3` to be coded as gear `three`, `4` to be coded as gear `four`, `5` to be coded as gear `five`.\n:::\n\n \n\n::: columns\n::: {.column width=\"50%\"}\nBase R:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars$gear_char <-\n  ifelse(\n    mtcars$gear == 3,\n    \"three\",\n    ifelse(\n      mtcars$gear == 4,\n      \"four\",\n      \"five\"\n    )\n  )\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\nTidyverse:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars <- mtcars %>%\n  mutate(\n    gear_char = case_when(\n      gear == 3 ~ \"three\",\n      gear == 4 ~ \"four\",\n      gear == 5 ~ \"five\"\n    )\n  )\n```\n:::\n\n:::\n:::\n\n# `ggplot2` revisited\n\n## `ggplot2` in tidyverse\n\n::: columns\n::: {.column width=\"50%\"}\n![](../img_slides/ggplot2-part-of-tidyverse.png){fig-align=\"center\" width=\"669\"}\n\n:::\n\n::: {.column width=\"50%\"}\n-   We talked about this in our review notes\n\n    -   I want to revisit it: always helps to have more examples!\n    -   This example is closer to the multivariable work we'll do in this class!\n\n \n\n-   **ggplot2** is tidyverse's data visualization package\n\n \n\n-   The `gg` in \"ggplot2\" stands for Grammar of Graphics\n\n \n\n-   It is inspired by the book **Grammar of Graphics** by Leland Wilkinson\n:::\n:::\n\n## Tidyverse: Visualizing multiple variables\n\n \n\n\n::: {.cell fig.asp='0.3'}\n\n```{.r .cell-code}\nggplot(\n  mtcars,\n  aes(x = disp, y = mpg, color = transmission)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](02_Data_Management_files/figure-revealjs/unnamed-chunk-8-1.png){width=100%}\n:::\n:::\n\n\n## Tidyverse: Visualizing even more variables\n\n\n::: {.cell fig.asp='0.3'}\n\n```{.r .cell-code}\nggplot(\n  mtcars,\n  aes(x = disp, y = mpg, color = transmission)) +\n  geom_point() +\n  facet_wrap(~ cyl)\n```\n\n::: {.cell-output-display}\n![](02_Data_Management_files/figure-revealjs/unnamed-chunk-9-1.png){width=100%}\n:::\n:::\n\n\n## Base R: Visualizing even more variables\n\n\n::: {.cell fig.asp='0.3'}\n\n```{.r .cell-code}\nmtcars$trans_color <- ifelse(mtcars$transmission == \"automatic\", \"green\", \"blue\")\nmtcars_cyl4 = mtcars[mtcars$cyl == 4, ]\nmtcars_cyl6 = mtcars[mtcars$cyl == 6, ]\nmtcars_cyl8 = mtcars[mtcars$cyl == 8, ]\npar(mfrow = c(1, 3), mar = c(2.5, 2.5, 2, 0), mgp = c(1.5, 0.5, 0))\nplot(mpg ~ disp, data = mtcars_cyl4, col = trans_color, main = \"Cyl 4\")\nplot(mpg ~ disp, data = mtcars_cyl6, col = trans_color, main = \"Cyl 6\")\nplot(mpg ~ disp, data = mtcars_cyl8, col = trans_color, main = \"Cyl 8\")\nlegend(\"topright\", legend = c(\"automatic\", \"manual\"), pch = 1, col = c(\"green\", \"blue\"))\n```\n\n::: {.cell-output-display}\n![](02_Data_Management_files/figure-revealjs/unnamed-chunk-10-1.png){width=100%}\n:::\n:::\n\n\n# Functions for data management\n\n## Important functions for data management\n\n \n\n**Data manipulation**\n\n-   `pivot_longer()` and `pivot_wider()` (not covered today)\n\n-   `rename()`\n\n-   `mutate()`\n\n-   `filter()`\n\n-   `select()`\n\n**Summarizing data**\n\n-   `tbl_summary()`\n-   `group_by()`\n-   `summarize()`\n-   `across()`\n\n## Let's look back at the `dds.discr` dataset that I briefly used last class\n\n   \n\n-   We will load the data (This is a special case! `dds.discr` is a built-in R dataset)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"dds.discr\")\n```\n:::\n\n\n-   Now, let's take a glimpse at the dataset:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(dds.discr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,000\nColumns: 6\n$ id           <int> 10210, 10409, 10486, 10538, 10568, 10690, 10711, 10778, 1…\n$ age.cohort   <fct> 13-17, 22-50, 0-5, 18-21, 13-17, 13-17, 13-17, 13-17, 13-…\n$ age          <int> 17, 37, 3, 19, 13, 15, 13, 17, 14, 13, 13, 14, 15, 17, 20…\n$ gender       <fct> Female, Male, Male, Female, Male, Female, Female, Male, F…\n$ expenditures <int> 2113, 41924, 1454, 6400, 4412, 4566, 3915, 3873, 5021, 28…\n$ ethnicity    <fct> White not Hispanic, White not Hispanic, Hispanic, Hispani…\n```\n:::\n:::\n\n\n## `rename()`: one of the first things I usually do\n\n-   I notice that two variables have values that don't necessarily match the variable name\n\n    -   Female and male are not genders\n\n    -   \"White not Hispanic\" combines race and ethnicity into one category\n\n::: heq\nI want to rename gender to SAB (sex assigned at birth) and rename ethnicity to R_E (race and ethnicity)\n:::\n\n \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndds.discr1 = dds.discr %>% \n  rename(SAB = gender, \n         R_E = ethnicity)\n\nglimpse(dds.discr1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,000\nColumns: 6\n$ id           <int> 10210, 10409, 10486, 10538, 10568, 10690, 10711, 10778, 1…\n$ age.cohort   <fct> 13-17, 22-50, 0-5, 18-21, 13-17, 13-17, 13-17, 13-17, 13-…\n$ age          <int> 17, 37, 3, 19, 13, 15, 13, 17, 14, 13, 13, 14, 15, 17, 20…\n$ SAB          <fct> Female, Male, Male, Female, Male, Female, Female, Male, F…\n$ expenditures <int> 2113, 41924, 1454, 6400, 4412, 4566, 3915, 3873, 5021, 28…\n$ R_E          <fct> White not Hispanic, White not Hispanic, Hispanic, Hispani…\n```\n:::\n:::\n\n\n## `mutate()`: constructing new variables from what you have\n\n-   We've seen a couple examples for `mutate()` so far (mostly because its used so often!)\n\n-   We haven't seen an example where we make a new variable from two variables\n\n::: heq\nI want to make a variable that is the ratio of expenditures over age\n:::\n\n \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndds.discr2 = dds.discr1 %>%\n  mutate(exp_to_age = expenditures/age)\n\nglimpse(dds.discr2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,000\nColumns: 7\n$ id           <int> 10210, 10409, 10486, 10538, 10568, 10690, 10711, 10778, 1…\n$ age.cohort   <fct> 13-17, 22-50, 0-5, 18-21, 13-17, 13-17, 13-17, 13-17, 13-…\n$ age          <int> 17, 37, 3, 19, 13, 15, 13, 17, 14, 13, 13, 14, 15, 17, 20…\n$ SAB          <fct> Female, Male, Male, Female, Male, Female, Female, Male, F…\n$ expenditures <int> 2113, 41924, 1454, 6400, 4412, 4566, 3915, 3873, 5021, 28…\n$ R_E          <fct> White not Hispanic, White not Hispanic, Hispanic, Hispani…\n$ exp_to_age   <dbl> 124.2941, 1133.0811, 484.6667, 336.8421, 339.3846, 304.40…\n```\n:::\n:::\n\n\n## `mutate()`: other examples\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndds.discr3 = dds.discr1 %>%\n  mutate(expend_20perc = expenditures * 0.2, \n         expend_sq = expenditures^2, \n         expend_over_5000 = case_when(\n           expenditures > 5000 ~ \"Yes\", \n           expenditures <= 5000 ~ \"No\"\n         ), \n         expend_log = log(expenditures)\n  )\nglimpse(dds.discr3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,000\nColumns: 10\n$ id               <int> 10210, 10409, 10486, 10538, 10568, 10690, 10711, 1077…\n$ age.cohort       <fct> 13-17, 22-50, 0-5, 18-21, 13-17, 13-17, 13-17, 13-17,…\n$ age              <int> 17, 37, 3, 19, 13, 15, 13, 17, 14, 13, 13, 14, 15, 17…\n$ SAB              <fct> Female, Male, Male, Female, Male, Female, Female, Mal…\n$ expenditures     <int> 2113, 41924, 1454, 6400, 4412, 4566, 3915, 3873, 5021…\n$ R_E              <fct> White not Hispanic, White not Hispanic, Hispanic, His…\n$ expend_20perc    <dbl> 422.6, 8384.8, 290.8, 1280.0, 882.4, 913.2, 783.0, 77…\n$ expend_sq        <dbl> 4464769, 1757621776, 2114116, 40960000, 19465744, 208…\n$ expend_over_5000 <chr> \"No\", \"Yes\", \"No\", \"Yes\", \"No\", \"No\", \"No\", \"No\", \"Ye…\n$ expend_log       <dbl> 7.655864, 10.643614, 7.282074, 8.764053, 8.392083, 8.…\n```\n:::\n:::\n\n\n## `filter()`: keep rows that match a condition\n\n-   What if I want to subset the data frame? (keep certain rows of observations)\n\n::: heq\nI want to look at the data for people who between 50 and 60 years old\n:::\n\n \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndds.discr3 = dds.discr2 %>%\n  filter(age >= 50 & age <= 60)\n\nglimpse(dds.discr3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 23\nColumns: 7\n$ id           <int> 15970, 19412, 29506, 31658, 36123, 39287, 39672, 43455, 4…\n$ age.cohort   <fct> 51+, 51+, 51+, 51+, 51+, 51+, 51+, 51+, 51+, 51+, 51+, 51…\n$ age          <int> 51, 60, 56, 60, 59, 59, 54, 57, 52, 57, 55, 52, 59, 54, 5…\n$ SAB          <fct> Female, Female, Female, Female, Male, Female, Female, Mal…\n$ expenditures <int> 54267, 57702, 48215, 46873, 42739, 44734, 52833, 48363, 5…\n$ R_E          <fct> White not Hispanic, White not Hispanic, White not Hispani…\n$ exp_to_age   <dbl> 1064.0588, 961.7000, 860.9821, 781.2167, 724.3898, 758.20…\n```\n:::\n:::\n\n\n## `select()`: keep or drop columns using their names and types\n\n-   What if I want to remove or keep certain variables?\n\n::: heq\nI want to only have age and expenditure in my data frame\n:::\n\n \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndds.discr4 = dds.discr2 %>%\n  select(age, expenditures)\n\nglimpse(dds.discr4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,000\nColumns: 2\n$ age          <int> 17, 37, 3, 19, 13, 15, 13, 17, 14, 13, 13, 14, 15, 17, 20…\n$ expenditures <int> 2113, 41924, 1454, 6400, 4412, 4566, 3915, 3873, 5021, 28…\n```\n:::\n:::\n\n\n# Summarizing Data\n\n## `tbl_summary()` : table summary (1/2)\n\n-   What if I want one of those fancy summary tables that are at the top of most research articles? (lovingly called \"Table 1\")\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gtsummary)\ntbl_summary(dds.discr2)\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div id=\"pzveloiefp\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#pzveloiefp table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#pzveloiefp thead, #pzveloiefp tbody, #pzveloiefp tfoot, #pzveloiefp tr, #pzveloiefp td, #pzveloiefp th {\n  border-style: none;\n}\n\n#pzveloiefp p {\n  margin: 0;\n  padding: 0;\n}\n\n#pzveloiefp .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#pzveloiefp .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#pzveloiefp .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#pzveloiefp .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#pzveloiefp .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#pzveloiefp .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#pzveloiefp .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#pzveloiefp .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#pzveloiefp .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#pzveloiefp .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#pzveloiefp .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#pzveloiefp .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#pzveloiefp .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#pzveloiefp .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#pzveloiefp .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#pzveloiefp .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#pzveloiefp .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#pzveloiefp .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#pzveloiefp .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#pzveloiefp .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#pzveloiefp .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#pzveloiefp .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#pzveloiefp .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#pzveloiefp .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#pzveloiefp .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#pzveloiefp .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#pzveloiefp .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#pzveloiefp .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#pzveloiefp .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#pzveloiefp .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#pzveloiefp .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#pzveloiefp .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#pzveloiefp .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#pzveloiefp .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#pzveloiefp .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#pzveloiefp .gt_left {\n  text-align: left;\n}\n\n#pzveloiefp .gt_center {\n  text-align: center;\n}\n\n#pzveloiefp .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#pzveloiefp .gt_font_normal {\n  font-weight: normal;\n}\n\n#pzveloiefp .gt_font_bold {\n  font-weight: bold;\n}\n\n#pzveloiefp .gt_font_italic {\n  font-style: italic;\n}\n\n#pzveloiefp .gt_super {\n  font-size: 65%;\n}\n\n#pzveloiefp .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#pzveloiefp .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#pzveloiefp .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#pzveloiefp .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#pzveloiefp .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#pzveloiefp .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#pzveloiefp .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#pzveloiefp .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#pzveloiefp div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"label\"><span data-qmd-base64=\"PHN0cm9uZz5DaGFyYWN0ZXJpc3RpYzwvc3Ryb25nPg==\"><span class='gt_from_md'><strong>Characteristic</strong></span></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"stat_0\"><span data-qmd-base64=\"PHN0cm9uZz5OID0gMSwwMDA8L3N0cm9uZz4=\"><span class='gt_from_md'><strong>N = 1,000</strong></span></span><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">id</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">55,385 (31,759, 76,205)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">age.cohort</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    0-5</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">82 (8.2%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    6-12</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">175 (18%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    13-17</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">212 (21%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    18-21</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">199 (20%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    22-50</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">226 (23%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    51+</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">106 (11%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">age</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">18 (12, 26)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">SAB</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Female</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">503 (50%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Male</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">497 (50%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">expenditures</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">7,026 (2,898, 37,718)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">R_E</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    American Indian</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">4 (0.4%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Asian</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">129 (13%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Black</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">59 (5.9%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Hispanic</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">376 (38%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Multi Race</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">26 (2.6%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Native Hawaiian</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">3 (0.3%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Other</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">2 (0.2%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    White not Hispanic</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">401 (40%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">exp_to_age</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">462 (273, 938)</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"2\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span> <span data-qmd-base64=\"TWVkaWFuIChRMSwgUTMpOyBuICglKQ==\"><span class='gt_from_md'>Median (Q1, Q3); n (%)</span></span></td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n:::\n:::\n\n:::\n:::\n\n## `tbl_summary()` : table summary (2/2)\n\n-   Let's make this more presentable\n\n \n\n::: columns\n::: {.column width=\"70%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndds.discr2 %>%\n  select(-id, -age.cohort, -exp_to_age) %>%\n  tbl_summary(label = c(age ~ \"Age\", \n                        R_E ~ \"Race/Ethnicity\", \n                        SAB ~ \"Sex Assigned at Birth\", \n                        expenditures ~ \"Expenditures\") ,\n              statistic = list(all_continuous() ~ \"{mean} ({sd})\"))\n```\n:::\n\n:::\n\n::: {.column width=\"30%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div id=\"tplcwisvdh\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#tplcwisvdh table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#tplcwisvdh thead, #tplcwisvdh tbody, #tplcwisvdh tfoot, #tplcwisvdh tr, #tplcwisvdh td, #tplcwisvdh th {\n  border-style: none;\n}\n\n#tplcwisvdh p {\n  margin: 0;\n  padding: 0;\n}\n\n#tplcwisvdh .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#tplcwisvdh .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#tplcwisvdh .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#tplcwisvdh .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#tplcwisvdh .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#tplcwisvdh .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#tplcwisvdh .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#tplcwisvdh .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#tplcwisvdh .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#tplcwisvdh .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#tplcwisvdh .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#tplcwisvdh .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#tplcwisvdh .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#tplcwisvdh .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#tplcwisvdh .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#tplcwisvdh .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#tplcwisvdh .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#tplcwisvdh .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#tplcwisvdh .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tplcwisvdh .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#tplcwisvdh .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#tplcwisvdh .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#tplcwisvdh .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tplcwisvdh .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#tplcwisvdh .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#tplcwisvdh .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#tplcwisvdh .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tplcwisvdh .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#tplcwisvdh .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#tplcwisvdh .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#tplcwisvdh .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#tplcwisvdh .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#tplcwisvdh .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tplcwisvdh .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#tplcwisvdh .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tplcwisvdh .gt_left {\n  text-align: left;\n}\n\n#tplcwisvdh .gt_center {\n  text-align: center;\n}\n\n#tplcwisvdh .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#tplcwisvdh .gt_font_normal {\n  font-weight: normal;\n}\n\n#tplcwisvdh .gt_font_bold {\n  font-weight: bold;\n}\n\n#tplcwisvdh .gt_font_italic {\n  font-style: italic;\n}\n\n#tplcwisvdh .gt_super {\n  font-size: 65%;\n}\n\n#tplcwisvdh .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#tplcwisvdh .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#tplcwisvdh .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#tplcwisvdh .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#tplcwisvdh .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#tplcwisvdh .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#tplcwisvdh .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#tplcwisvdh .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#tplcwisvdh div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"label\"><span data-qmd-base64=\"PHN0cm9uZz5DaGFyYWN0ZXJpc3RpYzwvc3Ryb25nPg==\"><span class='gt_from_md'><strong>Characteristic</strong></span></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"stat_0\"><span data-qmd-base64=\"PHN0cm9uZz5OID0gMSwwMDA8L3N0cm9uZz4=\"><span class='gt_from_md'><strong>N = 1,000</strong></span></span><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Age</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">23 (18)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Sex Assigned at Birth</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Female</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">503 (50%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Male</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">497 (50%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Expenditures</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">18,066 (19,543)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Race/Ethnicity</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    American Indian</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">4 (0.4%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Asian</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">129 (13%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Black</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">59 (5.9%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Hispanic</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">376 (38%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Multi Race</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">26 (2.6%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Native Hawaiian</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">3 (0.3%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Other</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">2 (0.2%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    White not Hispanic</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">401 (40%)</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"2\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span> <span data-qmd-base64=\"TWVhbiAoU0QpOyBuICglKQ==\"><span class='gt_from_md'>Mean (SD); n (%)</span></span></td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n:::\n:::\n\n:::\n:::\n\n## `group_by()`: group by one or more variables\n\n-   What if I want to quickly look at group differences?\n-   It will not change how the data look, but changes the actions of following functions\n\n::: heq\nI want to group my data by sex assigned at birth.\n:::\n\n \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndds.discr5 = dds.discr2 %>%\n  group_by(SAB)\nglimpse(dds.discr5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,000\nColumns: 7\nGroups: SAB [2]\n$ id           <int> 10210, 10409, 10486, 10538, 10568, 10690, 10711, 10778, 1…\n$ age.cohort   <fct> 13-17, 22-50, 0-5, 18-21, 13-17, 13-17, 13-17, 13-17, 13-…\n$ age          <int> 17, 37, 3, 19, 13, 15, 13, 17, 14, 13, 13, 14, 15, 17, 20…\n$ SAB          <fct> Female, Male, Male, Female, Male, Female, Female, Male, F…\n$ expenditures <int> 2113, 41924, 1454, 6400, 4412, 4566, 3915, 3873, 5021, 28…\n$ R_E          <fct> White not Hispanic, White not Hispanic, Hispanic, Hispani…\n$ exp_to_age   <dbl> 124.2941, 1133.0811, 484.6667, 336.8421, 339.3846, 304.40…\n```\n:::\n:::\n\n\n-   Let's see how the groups change something like the `summarize()` function in the next slide\n\n## `summarize()`: summarize your data or grouped data into one row\n\n-   What if I want to calculate specific descriptive statistics for my variables?\n-   This function is often best used with `group_by()`\n-   If only presenting the summaries, functions like `tbl_summary()` is better\n-   `summarize()` creates a new data frame, which means you can plot and manipulate the summarized data\n\n \n\n::: columns\n::: column\nOver whole sample:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndds.discr2 %>% \n  summarize(\n    ave = mean(expenditures),\n    SD = sd(expenditures),\n    med = median(expenditures))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n     ave     SD   med\n   <dbl>  <dbl> <dbl>\n1 18066. 19543.  7026\n```\n:::\n:::\n\n:::\n\n::: column\nGrouped by sex assigned at birth:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndds.discr2 %>% \n  group_by(SAB) %>% \n  summarize(\n    ave = mean(expenditures),\n    SD = sd(expenditures),\n    med = median(expenditures))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 4\n  SAB       ave     SD   med\n  <fct>   <dbl>  <dbl> <int>\n1 Female 18130. 20020.  6400\n2 Male   18001. 19068.  7219\n```\n:::\n:::\n\n:::\n:::\n\n## `across()`: apply a function across multiple columns\n\n-   Like `group_by()`, this function is often paired with another transformation function\n\n::: heq\nI want all my integer values to have two significant figures.\n:::\n\n \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndds.discr6 = dds.discr2 %>%\n  mutate(across(where(is.integer), signif, digits = 2))\n\nglimpse(dds.discr6)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,000\nColumns: 7\n$ id           <dbl> 10000, 10000, 10000, 11000, 11000, 11000, 11000, 11000, 1…\n$ age.cohort   <fct> 13-17, 22-50, 0-5, 18-21, 13-17, 13-17, 13-17, 13-17, 13-…\n$ age          <dbl> 17, 37, 3, 19, 13, 15, 13, 17, 14, 13, 13, 14, 15, 17, 20…\n$ SAB          <fct> Female, Male, Male, Female, Male, Female, Female, Male, F…\n$ expenditures <dbl> 2100, 42000, 1500, 6400, 4400, 4600, 3900, 3900, 5000, 29…\n$ R_E          <fct> White not Hispanic, White not Hispanic, Hispanic, Hispani…\n$ exp_to_age   <dbl> 124.2941, 1133.0811, 484.6667, 336.8421, 339.3846, 304.40…\n```\n:::\n:::\n\n\n# Folder organization\n\n## Folder organization\n\n-   Make a folder for our class!\n    -   I suggest naming it something like `BSTA_512_W25` to indicate the class and the term\n-   Make these folders in your computer (or in OneDrive if you prefer)\n\n    -   Only make them in OneDrive **if** you have a desktop connection\n\n::: columns\n::: column\n-   For a project, I have the following folders\n\n    -   Background\n    -   Code\n    -   Data_Raw\n    -   Data_Processed\n    -   Dissemination\n    -   Reports\n    -   Meetings\n:::\n\n::: column\n-   For our class, I suggest making one folder for the course with the following folders in it:\n\n    -   Data\n    -   Homework\n    -   Project (with above subfolders)\n    -   Lessons\n    -   And other folders if you want\n:::\n:::\n\n## Aside: folder and file naming\n\nThere are a few good practices for naming files and folders for easy tracking:\n\n1. Keep the name short and relevant\n2. Use leading numbers to help organize sequential items\n    - I can show you my lessons folders as an example \n3. Use dates in the format \"YYYY-MM-DD\" so that files are in chronological order\n4. You can label different versions if you would like to \n5. Use \"_\" to separate sections of the name\n    - I also use this to separate words, but some people say you should use \"-\" to separate words\n    \n## Creating project in RStudio\n\n-   Way to designate a working directory: basically your home base when working in R\n\n    -   We have to tell R exactly where we are in our folders and where to find other things\n\n    -   A project makes it easier to tell R where we are\n\n-   Basic steps to create a project\n\n    -   Go into RStudio\n\n    -   Create new project for this class (under `File` or top right corner)\n        \n        - I would chose \"Existing Directory\" since we have already set up our folders\n        - Make the new project in the `BSTA_512_W25` folder\n\n-   Once we have projects, we can open one and R will automatically know that its location is the start of our working directory\n\n- Only make one project for now!! \n\n## The nice thing about R projects\n\n- 5 minute video explaining some of the nice features of R projects\n\n<https://rfortherestofus.com/2022/10/rstudio-projects>\n\n\n## Reproducibility\n\n- Research data and code can reach the same results regardless of who is running the code\n\n  - This can also refer to future or past you!\n\n \n\n- We want to set up our work so the entire folder can be moved around and work in its new location\n\n \n\n- Projects work well in combination with the `here` package\n\n# `here` package and importing data\n\n## `here` package\n\n![Illustration by [Allison Horst](https://github.com/allisonhorst)](../img_slides/here_pkg.png)\n\n## `here` package\n\n::::: columns\n::: column\n-   [Good source for the `here` package](http://jenrichmond.rbind.io/post/how-to-use-the-here-package/)\n\n    -   Just substitute `.Rmd` with `.qmd`\n\n-   Basically, a `.qmd` file and `.R` file work differently\n\n    -   We haven't worked much with `.R` files\n\n-   For `.qmd` files, the automatic directory is the folder it is in\n\n    -   But we want it to be the main project folder\n\n-   `here` can help with that\n\n \n\n-   **Very important for reproducibility!!**\n:::\n\n::: column\n![](../img_slides/paths.png){fig-align=\"center\"}\n:::\n:::::\n\n## Using `here` package\n\n-   Within your console, type `here()` and enter\n\n    -   Try this with `getwd()` as well\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(here)\nhere()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"/Users/wakim/Library/CloudStorage/OneDrive-OregonHealth&ScienceUniversity/Teaching/Classes/W25_BSTA_512_612/BSTA_512_W25_site\"\n```\n:::\n\n```{.r .cell-code}\ngetwd()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"/Users/wakim/Library/CloudStorage/OneDrive-OregonHealth&ScienceUniversity/Teaching/Classes/W25_BSTA_512_612/BSTA_512_W25_site\"\n```\n:::\n:::\n\n\n \n\n-   `here` can be used whenever we need to access a file path in **R code**\n    -   Importing data\n    -   Saving output\n    -   Accessing files\n\n# Importing data\n\n## Using `here()` to load data\n\n-   The `here()` function will start at the working directory (where your `.Rproj` file is) and let you write out a file path for anything\n\n-   To load the dataset in our `.qmd` file, we will use:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\ndata = read_excel(here(\"./data/BodyTemperatures.xlsx\"))\ndata = read_excel(here(\"data\", \"BodyTemperatures.xlsx\"))\n```\n:::\n\n\n\n## Common functions to load data\n\n| Function       | Data file type  | Package needed |\n|----------------|-----------------|----------------|\n| `read_excel()` | `.xls`, `.xlsx` | `readxl`       |\n| `read.csv()`   | `.csv`          | Built in       |\n| `load()`       | `.Rdata`        | Built in       |\n| `read_sas()`   | `.sas7bdat`     | `haven`        |\n\n\n# Resources\n\n## `dplyr` resources\n\n-   [More `dpylr` functions to reference!](https://dplyr.tidyverse.org/reference/index.html)\n\nAdditional details and examples are available in the vignettes:\n\n-   [column-wise operations vignette](https://dplyr.tidyverse.org/articles/colwise.html)\n\n-   [row-wise operations vignette](https://dplyr.tidyverse.org/articles/rowwise.html)\n\n \n\nand the dplyr 1.0.0 release blog posts:\n\n-   [working across columns](https://www.tidyverse.org/blog/2020/04/dplyr-1-0-0-colwise/)\n-   [working within rows](https://www.tidyverse.org/blog/2020/04/dplyr-1-0-0-rowwise/)\n\n## R programming class at OHSU!\n\nYou can check out [Dr. Jessica Minnier's R class page](https://sph-r-programming-2022.netlify.app/) if you want more notes, videos, etc.\n\n## The larger tidy ecosystem\n\nJust to name a few...\n\n-   [janitor](https://garthtarr.github.io/meatR/janitor.html)\n\n-   [kableExtra](https://cran.r-project.org/web/packages/kableExtra/vignettes/awesome_table_in_html.html)\n\n-   [patchwork](https://patchwork.data-imaginist.com/)\n\n-   [gghighlight](https://cran.r-project.org/web/packages/gghighlight/vignettes/gghighlight.html)\n\n-   [tidybayes](https://mjskay.github.io/tidybayes/)\n\n## Credit to Mine Çetinkaya-Rundel\n\n-   These notes were built from Mine's notes\n\n    -   Most pages and code were left as she made them\n\n    -   I changed a few things to match our class\n\n-   Please see [her Github repository](https://github.com/mine-cetinkaya-rundel/teach-ds-wsc-2021/tree/main) for the original notes\n",
    "supporting": [
      "02_Data_Management_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/font-awesome/css/all.min.css\" rel=\"stylesheet\" />\n<link href=\"../../site_libs/font-awesome/css/v4-shims.min.css\" rel=\"stylesheet\" />\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}